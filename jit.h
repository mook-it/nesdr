// This file is part of the gbdyn project
// Licensing information can be found in the LICENSE file
// (C) 2013 Licker Nandor. All rights reserved.
#ifndef __JIT_H__
#define __JIT_H__

/**
 * x64 Code Emitter
 */
class JIT
{
public:
  /**
   * Executable code segment generated by the JIT
   */
  struct Segment
  {
    /// Start address of the segment
    uint16_t addr;
    /// Bytes this page can hold
    size_t capacity;
    /// Bytes present in the page
    size_t size;
    /// 6502 cycles required to execute
    size_t cycles;
    /// Pointer to executable memory
    uint8_t *mem;
  };

  /**
   * Creates a new JIT instance
   */
  JIT()
  {
  }

  /**
   * Destroys the JIT instance, freeing segments
   */
  ~JIT();

  /**
   * Creates a new, empty segment
   */
  Segment& CreateSegment(uint16_t addr);

  /**
   * Executes a code segment
   */
  void Execute(Segment &seg);

private:
  /// Function pointer that executes stuff
  typedef void (*Exec) ();

  /// Maps start addresses to segments
  std::map<uint16_t, Segment*> segments;
};

#endif
